# Generated by Django 3.2.7 on 2021-09-22 21:42

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BonusCoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_pmob', models.PositiveIntegerField(default=0)),
                ('number_available_at_start', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(db_index=True, max_length=128, unique=True)),
                ('received_sticker_pack', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Drop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drop_type', models.IntegerField(choices=[(0, 'airdrop'), (1, 'item')], db_index=True, default=0)),
                ('pre_drop_description', models.TextField()),
                ('advertisment_start_time', models.DateTimeField(db_index=True)),
                ('start_time', models.DateTimeField(db_index=True)),
                ('end_time', models.DateTimeField(db_index=True)),
                ('number_restriction', models.CharField(blank=True, default='+44', max_length=255)),
                ('timezone', models.CharField(default='UTC', max_length=255)),
                ('initial_coin_amount_pmob', models.PositiveIntegerField(default=0)),
                ('conversion_rate_mob_to_currency', models.FloatField(default=1.0)),
                ('currency_symbol', models.CharField(default='Â£', max_length=1)),
                ('country_code_restriction', models.CharField(default='GB', max_length=3)),
                ('country_long_name_restriction', models.CharField(default='United Kingdom', max_length=255)),
                ('max_refund_transaction_fees_covered', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(db_index=True, default='A drop', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DropSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(choices=[(-4, 'Idle And Refundable'), (-3, 'Idle'), (-2, 'Refunded'), (-1, 'Cancelled'), (0, 'Ready'), (1, 'Waiting For Payment Or Bonus TX'), (2, 'Waiting For Size'), (3, 'Waiting For Name'), (4, 'Waiting For Address'), (5, 'Shipping Info Confirmation'), (6, 'Allow Contact Requested'), (7, 'Completed'), (8, 'Customer Does Not Meet Restrictions'), (9, 'Out of Stock or MOB')], default=0)),
                ('manual_override', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('bonus_coin_claimed', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop_sessions', to='mobot_client.bonuscoin')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drop_sessions', to='mobot_client.customer')),
                ('drop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drop_sessions', to='mobot_client.drop')),
            ],
            options={
                'ordering': ('-state', '-updated'),
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price_in_pmob', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('short_description', models.TextField(blank=True, default=None, null=True)),
                ('image_link', models.URLField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, default='', null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.SmallIntegerField(choices=[(-1, 'Error'), (0, 'Not Processed'), (1, 'Processing'), (2, 'Processed')], default=0)),
                ('processing', models.DateTimeField(blank=True, help_text='The time we started processing a message', null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('direction', models.PositiveIntegerField(choices=[(0, 'received_from_customer'), (1, 'sent_to_customer')], db_index=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='mobot_client.customer')),
            ],
            options={
                'ordering': ['date', '-processing', 'updated'],
            },
        ),
        migrations.CreateModel(
            name='SignalPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, help_text='Note sent with payment', null=True)),
                ('receipt', models.CharField(help_text='encoded receipt', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='MOB', max_length=255)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(db_index=True, max_length=128)),
                ('description', models.TextField(default='MOB')),
                ('privacy_policy_url', models.URLField(default='https://privacy.com')),
            ],
        ),
        migrations.CreateModel(
            name='Sku',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skus', to='mobot_client.item')),
            ],
            options={
                'ordering': ['sort_order'],
                'base_manager_name': 'available',
                'unique_together': {('item', 'identifier')},
            },
            managers=[
                ('available', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RawSignalMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', phonenumber_field.modelfields.PhoneNumberField(help_text='Number of the receiver', max_length=128)),
                ('source', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Number associated with message, if it exists', max_length=128, null=True)),
                ('timestamp', models.IntegerField(help_text='Raw unix timestamp from the message data')),
                ('text', models.TextField(blank=True, help_text='Text body, if it exists', null=True)),
                ('raw', models.JSONField(help_text='The raw json sent')),
                ('payment', models.OneToOneField(blank=True, help_text='Receipt object', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signal_message', to='mobot_client.signalpayment')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessingError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exception', models.CharField(help_text='Exception Name', max_length=255)),
                ('tb', models.TextField(blank=True, help_text='Traceback or message', null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_errors', to='mobot_client.message')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_pmob', models.PositiveIntegerField(blank=True, help_text='Amount of payment, if known', null=True)),
                ('processed', models.DateTimeField(auto_now_add=True, help_text='The date a payment was processed, if it was.')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Time of last update')),
                ('status', models.CharField(choices=[('Failure', 'Failure'), ('TransactionPending', 'Transactionpending'), ('TransactionSuccess', 'Transactionsuccess')], default='TransactionPending', help_text='Status of payment', max_length=255)),
                ('txo_id', models.CharField(blank=True, max_length=255, null=True)),
                ('signal_payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mobot_client.signalpayment')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('shipping_address', models.TextField(blank=True, default=None, null=True)),
                ('shipping_name', models.TextField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(choices=[(0, 'started'), (1, 'confirmed'), (2, 'shipped'), (3, 'cancelled')], db_index=True, default=0)),
                ('conversion_rate_mob_to_currency', models.FloatField(default=0.0)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='mobot_client.customer')),
                ('drop_session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='mobot_client.dropsession')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='mobot_client.sku')),
            ],
            managers=[
                ('active_orders', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MobotResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incoming', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='mobot_client.message')),
                ('outgoing_response', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='response_message', to='mobot_client.message')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='payment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message', to='mobot_client.payment'),
        ),
        migrations.AddField(
            model_name='message',
            name='raw',
            field=models.OneToOneField(blank=True, help_text='Reference to the raw message this was parsed from', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parsed_message', to='mobot_client.rawsignalmessage'),
        ),
        migrations.AddField(
            model_name='message',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobot_client.store'),
        ),
        migrations.AddField(
            model_name='item',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='mobot_client.store'),
        ),
        migrations.AddField(
            model_name='drop',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drops', to='mobot_client.item'),
        ),
        migrations.AddField(
            model_name='drop',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drops', to='mobot_client.store'),
        ),
        migrations.CreateModel(
            name='CustomerStorePreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allows_contact', models.BooleanField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_store_preferences', to='mobot_client.customer')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_store_preferences', to='mobot_client.store')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerDropRefunds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_times_refunded', models.PositiveIntegerField(default=0)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drop_refunds', to='mobot_client.customer')),
                ('drop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drop_refunds', to='mobot_client.drop')),
            ],
        ),
        migrations.CreateModel(
            name='ChatbotSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('avatar_filename', models.CharField(max_length=255)),
                ('store', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mobot_client.store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bonuscoin',
            name='drop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonus_coins', to='mobot_client.drop'),
        ),
    ]
